library(MASS)
library(DescTools)
## vysledky jazykovych testu zavisi na socioekonomickem statusu ?
# U socioekonomickeho statusu porovnavejte pouze 5 skupin vytvorenych podle pocatecni cislice promenne SES.
# Ohodnotte jak statistickou, tak vecnou vyznamnost, a to nejen celkove pro promennou SES, ale i pro rozdily
# vsech dvojic socioekonomickych statusu.
jazykovy_test <- nlschools$lang
socioeko_status <- nlschools$SES
# vykreslení prvních deseti hodnot ať vím s čím pracuji
head(jazykovy_test, 10)
head(socioeko_status, 10)
head(socioeko_status, 20)
cut_points <- c(10, 20, 30, 40, 50)  # Zde se předpokládá, že maximální hodnota je 50, můžete upravit podle vašich dat
# Vytvoření kategorie podle rozmezí
kategorie <- cut(socioeko_status, breaks = cut_points, labels = FALSE)
# Převedení na faktor s požadovanými úrovněmi
kategorie <- factor(kategorie, levels = 1:5)
# Zobrazení prvních deseti hodnot pro kontrolu
head(kategorie, 10)
unique_values <- unique(socioeko_status)
num_unique <- length(unique_values)
print(num_unique)
unique(socioeko_status)
sort(unique(socioeko_status))
# Všechny unikátní hodnoty socioekonomického statusu
unique_values <- c(23, 10, 15, 13, 18, 20, 33, 27, 28, 37, 30, 40, 17, 50, 25, 35, 38, 45, 43, 47, 48)
# Definice rozmezí pro každou kategorii
cut_points <- c(10, 20, 30, 40, 50)  # Rozdělení do kategorií 1-5
# Vytvoření nové proměnné `socioeko_status_new` podle rozmezí
socioeko_status_new <- cut(unique_values, breaks = cut_points, labels = FALSE)
# Převedení na faktor s úrovněmi 1 až 5
socioeko_status_new <- factor(socioeko_status_new, levels = 1:5)
# Vypsání nové proměnné
print(socioeko_status_new)
# Vypsání nové proměnné
print(socioeko_status_new)
jazykovy_test <- nlschools$lang
socioeko_status <- nlschools$SES
# vykreslení prvních deseti hodnot ať vím s čím pracuji
head(jazykovy_test, 10)
head(socioeko_status, 20)
# socioeko na kategorie
kategorie <- factor(socioeko_status, levels = levels(kategorie)[1:5])
cut_points <- c(10, 20, 30, 40, 50, 60)  # Rozmezí pro každou kategorii (10-19, 20-29, atd.)
# Vytvoření faktoru kategorie podle definovaných rozmezí
kategorie <- cut(socioeko_status, breaks = cut_points, labels = FALSE)
# Převedení na faktor s explicitními úrovněmi 1 až 5
kategorie <- factor(kategorie, levels = 1:5)
# Vypsání prvních deseti hodnot pro kontrolu
print(head(kategorie, 10))
sort(unique(socioeko_status))
kategorie <- cut(socioeko_status, breaks = c(10, 20, 30, 40, 50, 60), labels = FALSE)
kategorie <- factor(kategorie, levels = 1:5)
# normalita?
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res) # podle QQ je šikmý doleva
head(kategorie, 10)
sort(unique(socioeko_status))
prvni_cislice <- as.integer(substr(socioeko_status, 1, 1))
# Vytvoření faktoru kategorie podle počátečních číslic SES
kategorie <- factor(prvni_cislice, levels = 1:5)
# Vypsání prvních deseti hodnot pro kontrolu
print(head(kategorie, 10))
kategorie <- factor(socioeko_status, levels = levels(kategorie)[1:5])
kategorie
prvni_cislice <- as.integer(substr(socioeko_status, 1, 1))
# Vytvoření faktoru kategorie podle počátečních číslic SES
kategorie <- factor(prvni_cislice, levels = 1:5)
# Vypsání prvních deseti hodnot pro kontrolu
print(head(kategorie, 10))
kategorie
# normalita?
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res) # podle QQ je šikmý doleva
jazykovy_test <- nlschools$lang
socioeko_status <- nlschools$SES
# vykreslení prvních deseti hodnot ať vím s čím pracuji
head(jazykovy_test, 10)
head(socioeko_status, 20)
# socioeko na kategorie
prvni_cislice <- as.integer(substr(socioeko_status, 1, 1))
kategorie <- factor(prvni_cislice, levels = 1:5)
# Chci porovnat statisticky významný rozdíl skupin = ANOVA nebo něco podobného
# Potřebuju zjistit - normalita reziduí, shodnost rozptylů
# normalita reziduí?
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res) # podle QQ je šikmý doleva
shapiro.test(res) # test souhlasí že není normální rozdělení (p = 0.02)
kruskal.test(jazykovy_test ~ kategorie)
DunnTest(jazykovy_test~kategorie)
boxplot(jazykovy_test~kategorie,main="vysledky testu podle socioeko statusu",col="orange")
bartlett.test(jazykovy_test~kategorie)
interpret_cohens_d(cohens_d(jazykovy_test~kategoricka))
library(effsize)
library(effsize)
library(effsize)
interpret_cohens_d(cohens_d(jazykovy_test~kategoricka))
pairwise_d <- pairwise_cohens_d(data$cislo, data$kategoricka)
library(effsize)
interpret_cohens_d(cohens_d(jazykovy_test~kategoricka))
cohens_d(jazykovy_test~kategoricka)
cohens_d(jazykovy_test~kategoricka)
pairwise_d <- pairwise_cohens_d(jazykovy_test, jazykovy_test)
cohens.d(jazykovy_test~kategoricka)
cohen.d(jazykovy_test~kategoricka)
cohen.d(jazykovy_test~kategorie)
# Věcná významnost
# Budu kontrolovat všechny páry cohenovým D
cohen.d(jazykovy_test~factor(kategorie, levels = levels(kategorie)[1:2]))
cohen.d(jazykovy_test~factor(kategorie, levels = levels(kategorie)[1:3])) # střední efekt
cohen.d(jazykovy_test ~ factor(kategorie, levels = c(levels(kategorie)[1], levels(kategorie)[3])))
cohen.d(jazykovy_test ~ factor(kategorie, levels = c(levels(kategorie)[1], levels(kategorie)[4])))
cohen.d(jazykovy_test ~ factor(kategorie, levels = c(levels(kategorie)[1], levels(kategorie)[5])))
cohen.d(jazykovy_test ~ factor(kategorie, levels = c(levels(kategorie)[2], levels(kategorie)[3])))
cohen.d(jazykovy_test ~ factor(kategorie, levels = c(levels(kategorie)[2], levels(kategorie)[4])))
cohen.d(jazykovy_test ~ factor(kategorie, levels = c(levels(kategorie)[2], levels(kategorie)[5])))
cohen.d(jazykovy_test ~ factor(kategorie, levels = c(levels(kategorie)[3], levels(kategorie)[4])))
cohen.d(jazykovy_test ~ factor(kategorie, levels = c(levels(kategorie)[3], levels(kategorie)[5])))
cohen.d(jazykovy_test ~ factor(kategorie, levels = c(levels(kategorie)[4], levels(kategorie)[5])))
kruskal.test(jazykovy_test ~ kategorie) # průměry se liší
UScereal
cereal_data <- UScereal
cereal_data <- subset(cereal_data, select = c("calories", "protein", "fat", "sodium", "fibre", "carbo", "sugars", "potassium"))
cereal_data
hc <- hclust(dist(cereal_data))
plot(hc, hang = -1)
# vidím outliery který jsou specialozovany na nějakou proměnnou a rozhodnul jsem se jich zbavit pro tuto analýzu
cereal_data <- cereal_data[!(rownames(cereal_data) %in% c("Grape-Nuts", "All-Bran", "100% Bran", "All-Bran with Extra Fiber")), ]
hc <- hclust(dist(cereal_data))
plot(hc, hang = -1)
# Dává mi smysl 5 shluků podle dendodramu po odstraneni outlieru
k <- 5
plot(hc)
rect.hclust(hc, k)
# Vytvoření nové proměnné v cereal_data s přiřazenými shluky
cereal_data$cluster <- cutree(hc, k)
# Výpočet průměrných hodnot pro každý shluk
cluster_means <- aggregate(. ~ cluster, data = cereal_data, FUN = mean)
# Výpis průměrných hodnot pro každý shluk
print(cluster_means)
## Vysledky ciselnych testu namerenych v datovem souboru UScereals znazornete vhodnym grafem.
# K jeho vykresleni vyuzijte faktorovou analyzu, pripadne hlavni komponenty, pokud vhodne faktory nebude mozno vytvorit.
fact_anal <- factanal(~., data = cereal_data, factors = 4,scores = "Bartlett")
fact_anal
# Závěr
#Faktor 1: Nutriční hodnoty
#Tento faktor má vysoké váhy pro vlákninu (fibre), draslík (potassium) a bílkoviny (protein).
#Může představovat zdravé složky v cereáliích, které jsou bohaté na vlákninu, bílkoviny a minerály.
#Faktor 2: Energetické složky
#Tento faktor má vysoké váhy pro kalorie (calories) a tuky (fat).
#Může indikovat energetickou hustotu cereálií, kde vyšší hodnoty mohou znamenat větší kalorickou hodnotu a obsah tuků.
#Faktor 3: Složení uhlohydrátů
#Tento faktor má vysoké váhy pro sacharidy (carbo) a v mírnější míře i pro sodík (sodium).
#Naznačuje, že cereálie s vyšším obsahem sacharidů mohou být spojeny s vyšším obsahem sodíku.
#Faktor 4: Obsah cukru
par(mfrow = c(1, 3))  # Rozmístění grafů do jednoho řádku a tří sloupců
# Graf Faktor 1 vs. Faktor 2
plot(fact_anal$scores[,1], fact_anal$scores[,2],
xlab = "Faktor 1 (Nutriční hodnoty)", ylab = "Faktor 2 (Energetické složky)",
main = "Faktorové skóry cereálií - F1 vs. F2")
# Graf Faktor 1 vs. Faktor 3
plot(fact_anal$scores[,1], fact_anal$scores[,3],
xlab = "Faktor 1 (Nutriční hodnoty)", ylab = "Faktor 3 (Složení uhlohydrátů)",
main = "Faktorové skóry cereálií - F1 vs. F3")
# Graf Faktor 2 vs. Faktor 3
plot(fact_anal$scores[,2], fact_anal$scores[,3],
xlab = "Faktor 2 (Energetické složky)", ylab = "Faktor 3 (Složení uhlohydrátů)",
main = "Faktorové skóry cereálií - F2 vs. F3")
library(MASS)
library(DescTools)
jazykovy_test <- nlschools$lang
socioeko_status <- nlschools$SES
# vykreslení prvních deseti hodnot ať vím s čím pracuji
head(jazykovy_test, 10)
head(socioeko_status, 10)
prvni_cislice <- as.integer(substr(socioeko_status, 1, 1))
kategorie <- factor(prvni_cislice, levels = 1:5)
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res)
shapiro.test(res)
boxplot(jazykovy_test~kategorie,main="vysledky testu podle socioeko statusu",col="orange")
bartlett.test(jazykovy_test~kategorie)
#  p-value = 1.03e-05 => rozptyl nejsou stejné
kruskal.test(jazykovy_test ~ kategorie) # průměry se liší
DunnTest(jazykovy_test~kategorie)
cohen.d(jazykovy_test ~ factor(kategorie, levels = c(levels(kategorie)[1], levels(kategorie)[2]))) # mid
cohen.d(jazykovy_test ~ factor(kategorie, levels = c(levels(kategorie)[1], levels(kategorie)[3]))) # mid
cohen.d(jazykovy_test ~ factor(kategorie, levels = c(levels(kategorie)[1], levels(kategorie)[4]))) # large
cohen.d(jazykovy_test ~ factor(kategorie, levels = c(levels(kategorie)[1], levels(kategorie)[5]))) # large
cohen.d(jazykovy_test ~ factor(kategorie, levels = c(levels(kategorie)[2], levels(kategorie)[3]))) # small
cohen.d(jazykovy_test ~ factor(kategorie, levels = c(levels(kategorie)[2], levels(kategorie)[4]))) # mid
cohen.d(jazykovy_test ~ factor(kategorie, levels = c(levels(kategorie)[2], levels(kategorie)[5]))) # mid
cohen.d(jazykovy_test ~ factor(kategorie, levels = c(levels(kategorie)[3], levels(kategorie)[4]))) # small
cohen.d(jazykovy_test ~ factor(kategorie, levels = c(levels(kategorie)[3], levels(kategorie)[5]))) # mid
cohen.d(jazykovy_test ~ factor(kategorie, levels = c(levels(kategorie)[4], levels(kategorie)[5]))) # small
cereal_data <- UScereal
cereal_data <- subset(cereal_data, select = c("calories", "protein", "fat", "sodium", "fibre", "carbo", "sugars", "potassium"))
hc <- hclust(dist(cereal_data))
plot(hc, hang = -1)
# vidím outliery který jsou specialozovany na nějakou proměnnou a rozhodnul jsem se jich zbavit pro tuto analýzu
cereal_data <- cereal_data[!(rownames(cereal_data) %in% c("Grape-Nuts", "All-Bran", "100% Bran", "All-Bran with Extra Fiber")), ]
hc <- hclust(dist(cereal_data))
plot(hc, hang = -1)
k <- 5
plot(hc)
rect.hclust(hc, k)
cereal_data$cluster <- cutree(hc, k)
cluster_means <- aggregate(. ~ cluster, data = cereal_data, FUN = mean)
print(cluster_means)
fact_anal <- factanal(~., data = cereal_data, factors = 4,scores = "Bartlett")
fact_anal
par(mfrow = c(1, 3))
plot(fact_anal$scores[,1], fact_anal$scores[,2],
xlab = "Faktor 1 (Nutriční hodnoty)", ylab = "Faktor 2 (Energetické složky)",
main = "Faktorové skóry cereálií - F1 vs. F2")
plot(fact_anal$scores[,1], fact_anal$scores[,3],
xlab = "Faktor 1 (Nutriční hodnoty)", ylab = "Faktor 3 (Složení uhlohydrátů)",
main = "Faktorové skóry cereálií - F1 vs. F3")
plot(fact_anal$scores[,2], fact_anal$scores[,3],
xlab = "Faktor 2 (Energetické složky)", ylab = "Faktor 3 (Složení uhlohydrátů)",
main = "Faktorové skóry cereálií - F2 vs. F3")
