library(MASS)
nlschools
nlschools
jazykovy_test <- nlschools$lang
socioeko_status <- nlschools$SES
head(jazykovy_test, 10)
head(socioeko_status, 10)
prvni_cislice <- as.integer(substr(socioeko_status, 1, 1))
skupiny <- cut(prvni_cislice, breaks = 5, labels = FALSE)
skupiny
skupiny <- as.factor(socioeko_status)
skupiny <- as.factor(socioeko_status)
skupiny
kategorie <- as.factor(socioeko_status)
# normalita?
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res)
library(DescTools)
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res)
shapiro.test(res)
kruskal.test(jazykovy_test ~ kategorie)
boxplot(jazykovy_test~kategorie,main="vysledky testu podle socioeko statusu",col="orange")
prvni_cislice <- as.integer(substr(socioeko_status, 1, 1))
prvnich_5 <- factor(prvni_cislice[prvni_cislice <= 5])
# normalita?
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res) # podle QQ je šikmý doleva
shapiro.test(res) # test souhlasí že není normální rozdělení (p < 0.05)
boxplot(jazykovy_test~kategorie,main="vysledky testu podle socioeko statusu",col="orange")
prvni_cislice <- as.integer(substr(socioeko_status, 1, 1))
prvnich_5 <- factor(prvni_cislice[prvni_cislice <= 5])
prvnich_5
kategorie <- as.factor(socioeko_status, levels = 5)
kategorie <- as.factor(socioeko_status, levels = levels(kategorie)[1:5])
kategorie <- factor(socioeko_status, levels = levels(kategorie)[1:5])
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res) # podle QQ je šikmý doleva
shapiro.test(res) # test souhlasí že není normální rozdělení (p < 0.05)
boxplot(jazykovy_test~kategorie,main="vysledky testu podle socioeko statusu",col="orange")
kruskal.test(jazykovy_test ~ kategorie)
jazykovy_test <- nlschools$lang
socioeko_status <- nlschools$SES
# vykreslení prvních deseti hodnot ať vím s čím pracuji
head(jazykovy_test, 10)
head(socioeko_status, 10)
# socioeko na kategorie
kategorie <- factor(socioeko_status, levels = levels(kategorie)[1:5])
# normalita?
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res) # podle QQ je šikmý doleva
shapiro.test(res) # test souhlasí že není normální rozdělení (p < 0.05)
boxplot(jazykovy_test~kategorie,main="vysledky testu podle socioeko statusu",col="orange")
# nemám normální + mám víc než 2 kategorie => kruskal
kruskal.test(jazykovy_test ~ kategorie)
jazykovy_test <- nlschools$lang
socioeko_status <- nlschools$SES
# vykreslení prvních deseti hodnot ať vím s čím pracuji
head(jazykovy_test, 10)
head(socioeko_status, 10)
# socioeko na kategorie
kategorie <- factor(socioeko_status, levels = levels(kategorie)[1:5])
# normalita?
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res) # podle QQ je šikmý doleva
shapiro.test(res) # test souhlasí že není normální rozdělení (p < 0.05)
boxplot(jazykovy_test~kategorie,main="vysledky testu podle socioeko statusu",col="orange")
# nemám normální + mám víc než 2 kategorie => kruskal
kruskal.test(jazykovy_test ~ kategorie)
TukeyHSD(kruskal.test(jazykovy_test ~ kategorie))
library(dunn.test)
install.packages(dunn.test)
install.packages(dunn)
library(stats)
vysledky <- pairwise.wilcox.test(jazykovy_test ~ kategorie, p.adjust = "bonferroni")
jazykovy_test <- nlschools$lang
socioeko_status <- nlschools$SES
# vykreslení prvních deseti hodnot ať vím s čím pracuji
head(jazykovy_test, 10)
head(socioeko_status, 10)
# socioeko na kategorie
kategorie <- factor(socioeko_status, levels = levels(kategorie)[1:5])
# normalita?
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res) # podle QQ je šikmý doleva
shapiro.test(res) # test souhlasí že není normální rozdělení (p < 0.05)
boxplot(jazykovy_test~kategorie,main="vysledky testu podle socioeko statusu",col="orange")
# test variability
bartlett.test(cislo~kategorie)
bartlett.test(jazykovy_test~kategorie)
shapiro.test(res) # test souhlasí že není normální rozdělení (p < 0.05)
oneway.test(jazykovy_test~kategorie, var.equal = FALSE)
library(dunn.test)
dunn_vysledek <- dunn.test::dunn.test(x = jazykovy_test, g = kategorie, method = "bonferroni")
print(dunn_vysledek)
plot(TukeyHSD(aov(jaz_test~factor(kategorie))))
jazykovy_test <- nlschools$lang
socioeko_status <- nlschools$SES
# vykreslení prvních deseti hodnot ať vím s čím pracuji
head(jazykovy_test, 10)
head(socioeko_status, 10)
# socioeko na kategorie
kategorie <- factor(socioeko_status, levels = levels(kategorie)[1:5])
# normalita?
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res) # podle QQ je šikmý doleva
shapiro.test(res) # test souhlasí že není normální rozdělení (p = 0.02)
boxplot(jazykovy_test~kategorie,main="vysledky testu podle socioeko statusu",col="orange")
# test variability
oneway.test(jazykovy_test~kategorie, var.equal = FALSE)
# rozptyly jsou různé (p = 0.0007558)
# nemám normální + mám víc než 2 kategorie => kruskal
kruskal.test(jazykovy_test ~ kategorie)
# Kruskal-Wallis chi-squared = 18.791, df = 4, p-value = 0.0008638
# p < alfa takže existuje rozdíl mezi alespoň dvěma skupinami
dunn_vysledek <- dunn.test::dunn.test(x = jazykovy_test, g = kategorie, method = "bonferroni")
print(dunn_vysledek)
UScereal
library(DescTools)
# nacteni knihovny
# Porovnavame 2 vyucujici na zaklade hodnoceni jejich studentu.
#   Je mezi vyucujicimi vyznamny rozdil?
matematici <- data.frame(ucitel = factor(rep(1:2, c(5, 7))),
spokojenost = c(1, 3, 2, 4, 3, 2, 6, 4, 5, 5, 3, 4),
znalost = c(4, 7, 2, 6, 3, 6, 6, 8, 7, 10, 9, 6))
# vytvoreni dat
matematici
# ukazka dat
tapply(matematici$spokojenost,matematici$ucitel,mean)
tapply(matematici$znalost,matematici$ucitel,mean)
boxplot(matematici$spokojenost~matematici$ucitel)
boxplot(matematici$znalost~matematici$ucitel)
t.test(matematici$spokojenost~matematici$ucitel)
t.test(matematici$znalost~matematici$ucitel)
(m1 <- HotellingsT2Test(cbind(matematici$spokojenost, matematici$znalost) ~ matematici$ucitel))
trhliny <- c(6.5, 6.2, 5.8, 6.5, 6.5, 6.9, 7.2, 6.9, 6.1, 6.3, 6.7, 6.6, 7.2, 7.1, 6.8, 7.1, 7.0, 7.2, 7.5, 7.6)
lesk <- c(9.5, 9.9, 9.6, 9.6, 9.2, 9.1, 10.0, 9.9, 9.5, 9.4, 9.1, 9.3, 8.3, 8.4, 8.5, 9.2, 8.8, 9.7, 10.1, 9.2)
sytost <- c(4.4, 6.4, 3.0, 4.1, 0.8, 5.7, 2.0, 3.9, 1.9, 5.7, 2.8, 4.1, 3.8, 1.6, 3.4, 8.4, 5.2, 6.9, 2.7, 1.9)
Y <- cbind(trhliny, lesk, sytost)
# zavisle promenna se sklada ze tri dilcich promennych
pomer <- factor(gl(2,10), labels=c("Nizky", "Vysoky"))
prisady <- factor(gl(2, 5, length=20), labels=c("Nizky", "Vysoky"))
