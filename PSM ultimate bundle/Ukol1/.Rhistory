library(MASS)
nlschools
nlschools
jazykovy_test <- nlschools$lang
socioeko_status <- nlschools$SES
head(jazykovy_test, 10)
head(socioeko_status, 10)
prvni_cislice <- as.integer(substr(socioeko_status, 1, 1))
skupiny <- cut(prvni_cislice, breaks = 5, labels = FALSE)
skupiny
skupiny <- as.factor(socioeko_status)
skupiny <- as.factor(socioeko_status)
skupiny
kategorie <- as.factor(socioeko_status)
# normalita?
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res)
library(DescTools)
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res)
shapiro.test(res)
kruskal.test(jazykovy_test ~ kategorie)
boxplot(jazykovy_test~kategorie,main="vysledky testu podle socioeko statusu",col="orange")
prvni_cislice <- as.integer(substr(socioeko_status, 1, 1))
prvnich_5 <- factor(prvni_cislice[prvni_cislice <= 5])
# normalita?
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res) # podle QQ je šikmý doleva
shapiro.test(res) # test souhlasí že není normální rozdělení (p < 0.05)
boxplot(jazykovy_test~kategorie,main="vysledky testu podle socioeko statusu",col="orange")
prvni_cislice <- as.integer(substr(socioeko_status, 1, 1))
prvnich_5 <- factor(prvni_cislice[prvni_cislice <= 5])
prvnich_5
kategorie <- as.factor(socioeko_status, levels = 5)
kategorie <- as.factor(socioeko_status, levels = levels(kategorie)[1:5])
kategorie <- factor(socioeko_status, levels = levels(kategorie)[1:5])
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res) # podle QQ je šikmý doleva
shapiro.test(res) # test souhlasí že není normální rozdělení (p < 0.05)
boxplot(jazykovy_test~kategorie,main="vysledky testu podle socioeko statusu",col="orange")
kruskal.test(jazykovy_test ~ kategorie)
jazykovy_test <- nlschools$lang
socioeko_status <- nlschools$SES
# vykreslení prvních deseti hodnot ať vím s čím pracuji
head(jazykovy_test, 10)
head(socioeko_status, 10)
# socioeko na kategorie
kategorie <- factor(socioeko_status, levels = levels(kategorie)[1:5])
# normalita?
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res) # podle QQ je šikmý doleva
shapiro.test(res) # test souhlasí že není normální rozdělení (p < 0.05)
boxplot(jazykovy_test~kategorie,main="vysledky testu podle socioeko statusu",col="orange")
# nemám normální + mám víc než 2 kategorie => kruskal
kruskal.test(jazykovy_test ~ kategorie)
jazykovy_test <- nlschools$lang
socioeko_status <- nlschools$SES
# vykreslení prvních deseti hodnot ať vím s čím pracuji
head(jazykovy_test, 10)
head(socioeko_status, 10)
# socioeko na kategorie
kategorie <- factor(socioeko_status, levels = levels(kategorie)[1:5])
# normalita?
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res) # podle QQ je šikmý doleva
shapiro.test(res) # test souhlasí že není normální rozdělení (p < 0.05)
boxplot(jazykovy_test~kategorie,main="vysledky testu podle socioeko statusu",col="orange")
# nemám normální + mám víc než 2 kategorie => kruskal
kruskal.test(jazykovy_test ~ kategorie)
TukeyHSD(kruskal.test(jazykovy_test ~ kategorie))
library(dunn.test)
install.packages(dunn.test)
install.packages(dunn)
library(stats)
vysledky <- pairwise.wilcox.test(jazykovy_test ~ kategorie, p.adjust = "bonferroni")
jazykovy_test <- nlschools$lang
socioeko_status <- nlschools$SES
# vykreslení prvních deseti hodnot ať vím s čím pracuji
head(jazykovy_test, 10)
head(socioeko_status, 10)
# socioeko na kategorie
kategorie <- factor(socioeko_status, levels = levels(kategorie)[1:5])
# normalita?
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res) # podle QQ je šikmý doleva
shapiro.test(res) # test souhlasí že není normální rozdělení (p < 0.05)
boxplot(jazykovy_test~kategorie,main="vysledky testu podle socioeko statusu",col="orange")
# test variability
bartlett.test(cislo~kategorie)
bartlett.test(jazykovy_test~kategorie)
shapiro.test(res) # test souhlasí že není normální rozdělení (p < 0.05)
oneway.test(jazykovy_test~kategorie, var.equal = FALSE)
library(dunn.test)
dunn_vysledek <- dunn.test::dunn.test(x = jazykovy_test, g = kategorie, method = "bonferroni")
print(dunn_vysledek)
plot(TukeyHSD(aov(jaz_test~factor(kategorie))))
jazykovy_test <- nlschools$lang
socioeko_status <- nlschools$SES
# vykreslení prvních deseti hodnot ať vím s čím pracuji
head(jazykovy_test, 10)
head(socioeko_status, 10)
# socioeko na kategorie
kategorie <- factor(socioeko_status, levels = levels(kategorie)[1:5])
# normalita?
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res) # podle QQ je šikmý doleva
shapiro.test(res) # test souhlasí že není normální rozdělení (p = 0.02)
boxplot(jazykovy_test~kategorie,main="vysledky testu podle socioeko statusu",col="orange")
# test variability
oneway.test(jazykovy_test~kategorie, var.equal = FALSE)
# rozptyly jsou různé (p = 0.0007558)
# nemám normální + mám víc než 2 kategorie => kruskal
kruskal.test(jazykovy_test ~ kategorie)
# Kruskal-Wallis chi-squared = 18.791, df = 4, p-value = 0.0008638
# p < alfa takže existuje rozdíl mezi alespoň dvěma skupinami
dunn_vysledek <- dunn.test::dunn.test(x = jazykovy_test, g = kategorie, method = "bonferroni")
print(dunn_vysledek)
UScereal
library(DescTools)
# nacteni knihovny
# Porovnavame 2 vyucujici na zaklade hodnoceni jejich studentu.
#   Je mezi vyucujicimi vyznamny rozdil?
matematici <- data.frame(ucitel = factor(rep(1:2, c(5, 7))),
spokojenost = c(1, 3, 2, 4, 3, 2, 6, 4, 5, 5, 3, 4),
znalost = c(4, 7, 2, 6, 3, 6, 6, 8, 7, 10, 9, 6))
# vytvoreni dat
matematici
# ukazka dat
tapply(matematici$spokojenost,matematici$ucitel,mean)
tapply(matematici$znalost,matematici$ucitel,mean)
boxplot(matematici$spokojenost~matematici$ucitel)
boxplot(matematici$znalost~matematici$ucitel)
t.test(matematici$spokojenost~matematici$ucitel)
t.test(matematici$znalost~matematici$ucitel)
(m1 <- HotellingsT2Test(cbind(matematici$spokojenost, matematici$znalost) ~ matematici$ucitel))
trhliny <- c(6.5, 6.2, 5.8, 6.5, 6.5, 6.9, 7.2, 6.9, 6.1, 6.3, 6.7, 6.6, 7.2, 7.1, 6.8, 7.1, 7.0, 7.2, 7.5, 7.6)
lesk <- c(9.5, 9.9, 9.6, 9.6, 9.2, 9.1, 10.0, 9.9, 9.5, 9.4, 9.1, 9.3, 8.3, 8.4, 8.5, 9.2, 8.8, 9.7, 10.1, 9.2)
sytost <- c(4.4, 6.4, 3.0, 4.1, 0.8, 5.7, 2.0, 3.9, 1.9, 5.7, 2.8, 4.1, 3.8, 1.6, 3.4, 8.4, 5.2, 6.9, 2.7, 1.9)
Y <- cbind(trhliny, lesk, sytost)
# zavisle promenna se sklada ze tri dilcich promennych
pomer <- factor(gl(2,10), labels=c("Nizky", "Vysoky"))
prisady <- factor(gl(2, 5, length=20), labels=c("Nizky", "Vysoky"))
jazykovy_test <- nlschools$lang
library(MASS)
library(DescTools)
library(dunn.test)
jazykovy_test <- nlschools$lang
socioeko_status <- nlschools$SES
# vykreslení prvních deseti hodnot ať vím s čím pracuji
head(jazykovy_test, 10)
head(socioeko_status, 10)
kategorie <- factor(socioeko_status, levels = levels(kategorie)[1:5])
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res) # podle QQ je šikmý doleva
jazykovy_test <- nlschools$lang
socioeko_status <- nlschools$SES
# vykreslení prvních deseti hodnot ať vím s čím pracuji
head(jazykovy_test, 10)
head(socioeko_status, 10)
# socioeko na kategorie
kategorie <- factor(socioeko_status, levels = levels(kategorie)[1:5])
# normalita?
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res) # podle QQ je šikmý doleva
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res) # podle QQ je šikmý doleva
shapiro.test(res) # test souhlasí že není normální rozdělení (p = 0.02)
boxplot(jazykovy_test~kategorie,main="vysledky testu podle socioeko statusu",col="orange")
tapply(jazykovy_test, kategorie, PlotQQ)
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res) # podle QQ je šikmý doleva
shapiro.test(res) # test souhlasí že není normální rozdělení (p = 0.02)
socioeko statusu",col="orange")
jazykovy_test <- nlschools$lang
socioeko_status <- nlschools$SES
# vykreslení prvních deseti hodnot ať vím s čím pracuji
head(jazykovy_test, 10)
head(socioeko_status, 10)
# socioeko na kategorie
kategorie <- factor(socioeko_status, levels = levels(kategorie)[1:5])
# normalita?
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res) # podle QQ je šikmý doleva
shapiro.test(res) # test souhlasí že není normální rozdělení (p = 0.02)
boxplot(jazykovy_test~kategorie,main="vysledky testu podle socioeko statusu",col="orange")
# test variability
oneway.test(jazykovy_test~kategorie, var.equal = FALSE)
oneway.test(jazykovy_test~kategorie, var.equal = FALSE)
jazykovy_test <- nlschools$lang
socioeko_status <- nlschools$SES
# vykreslení prvních deseti hodnot ať vím s čím pracuji
head(jazykovy_test, 10)
head(socioeko_status, 10)
# socioeko na kategorie
kategorie <- factor(socioeko_status, levels = levels(kategorie)[1:5])
# normalita?
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res) # podle QQ je šikmý doleva
shapiro.test(res) # test souhlasí že není normální rozdělení (p = 0.02)
boxplot(jazykovy_test~kategorie,main="vysledky testu podle socioeko statusu",col="orange")
# test variability
oneway.test(jazykovy_test~kategorie, var.equal = FALSE)
TukeyHSD(aov(jazykovy_test~factor(kategorie), var.equal = FALSE))
plot(TukeyHSD(aov(jazykovy_test~factor(kategorie))))
library(MASS)
library(DescTools)
library(dunn.test)
boxplot(jazykovy_test~kategorie,main="vysledky testu podle socioeko statusu",col="orange")
jazykovy_test <- nlschools$lang
socioeko_status <- nlschools$SES
# vykreslení prvních deseti hodnot ať vím s čím pracuji
head(jazykovy_test, 10)
head(socioeko_status, 10)
# socioeko na kategorie
kategorie <- factor(socioeko_status, levels = levels(kategorie)[1:5])
# normalita?
res<-residuals(lm(jazykovy_test~kategorie))
PlotQQ(res) # podle QQ je šikmý doleva
shapiro.test(res) # test souhlasí že není normální rozdělení (p = 0.02)
boxplot(jazykovy_test~kategorie,main="vysledky testu podle socioeko statusu",col="orange")
# test variability
oneway.test(jazykovy_test~kategorie, var.equal = FALSE)
# rozptyly jsou různé (p = 0.0007558) => Existuje minimálně jedna dvojice se statisticky výzmannou rozdílností
TukeyHSD(aov(jazykovy_test~factor(kategorie), var.equal = FALSE))
plot(TukeyHSD(aov(jazykovy_test~factor(kategorie))))
kategorie
UScereal
cereal_data <- UScereal
cereal_data
cereal <- cereal_data[, c("calories", "protein", "fat", "sodium" , "fibre", "carbo","sugars", "potassium", "vitamins")]
cereal$vitamins <- as.numeric(factor(cereal$vitamins))
truncated_row_names <- substr(rownames(cereal), 1, 7)
cereal.hc <- hclust(dist(cereal), "ave")
plot(cereal.hc, hang = -1, labels = truncated_row_names, cex = 0.5)
rect.hclust(cereal.hc, k=8)
seg <- cutree(cereal.hc, k=8)
plot(cereal$calories, cereal$sugars, col=seg, pch=19, main="Kalorie vs Cukry")
plot(cereal$calories, cereal$carbo, col=seg, pch=19, main="Kalorie vs Sacharidy")
plot(cereal$calories, cereal$fiber, col=seg, pch=19, main="Kalorie vs Vláknina")
plot(cereal$calories, cereal$fat, col=seg, pch=19, main="Kalorie vs Tuky")
cereal_data <- UScereal
UScereal
cereal_data
cereal_data <- UScereal
UScereal
library(MASS)
UScereal
cereal_data <- UScereal
cereal_data <- subset(cereal_data, select = -c("mfr", "shelf", "vitamins"))
cereal_data <- UScereal
cereal_data
cereal_data <- subset(cereal_data, select = c("name", "calories", "protein", "fat", "sodium", "fibre", "carbo", "sugars", "potassium"))
print(names(cereal_data))
cereal_data <- UScereal
cereal_data
cereal_data <- subset(cereal_data, select = c("calories", "protein", "fat", "sodium", "fibre", "carbo", "sugars", "potassium"))
print(names(cereal_data))
cereal_data
truncated_row_names <- substr(rownames(cereal), 1, 7)
cereal.hc <- hclust(dist(cereal), "ave")
plot(cereal.hc, hang = -1, labels = truncated_row_names, cex = 0.5)
plot(predpovedi$x[,1],predpovedi$x[,2],pch=19,col=predpovedi$class,
main="Graf diskriminacnich funkci",xlab="LD1",ylab="LD2")
library(MASS)
## Diskriminacni analyza
Iris <- data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]),Sp = rep(c("s","c","v"), rep(50,3)))
train <- sample(1:150, 75)
table(Iris$Sp[train])
(z <- lda(Sp ~ ., Iris, prior = c(1,1,1)/3, subset = train))
predpovedi<-predict(z, Iris[-train, ])
predpovedi$x
plot(predpovedi$x[,1],predpovedi$x[,2],pch=19,col=predpovedi$class,
main="Graf diskriminacnich funkci",xlab="LD1",ylab="LD2")
legend(9,2.2,legend=c(unique(predpovedi$class)),pch=19,col=1:3)
hc <- hclust(dist(USArrests), "ave")
hc <- hclust(dist(USArrests))
plot(hc, hang = -1)
seg<-cutree(hc,k=4)
table(seg)
rect.hclust(hc, k=4, border="red")
# zobrazi skupiny do grafu
tapply(USArrests$Murder,as.factor(seg),mean)
hc <- hclust(dist(cereal_data))
plot(hc, hang = -1)
hc <- hclust(dist(cereal_data))
plot(hc, hang = -1, "ave")
UScereal
cereal_data <- UScereal
cereal_data <- subset(cereal_data, select = c("calories", "protein", "fat", "sodium", "fibre", "carbo", "sugars", "potassium"))
cereal_data
hc <- hclust(dist(cereal_data))
plot(hc, hang = -1)
k <- 3
plot(hc)
rect.hclust(hc, k)
k <- 4
plot(hc)
rect.hclust(hc, k)
truncated_row_names <- substr(rownames(cereal), 1, 7)
cereal.hc <- hclust(dist(cereal), "ave")
plot(cereal.hc, hang = -1, labels = truncated_row_names, cex = 0.5)
rect.hclust(cereal.hc, k=8)
seg <- cutree(cereal.hc, k=8)
plot(cereal$calories, cereal$sugars, col=seg, pch=19, main="Kalorie vs Cukry")
plot(cereal$calories, cereal$carbo, col=seg, pch=19, main="Kalorie vs Sacharidy")
plot(cereal$calories, cereal$fiber, col=seg, pch=19, main="Kalorie vs Vláknina")
plot(cereal$calories, cereal$fat, col=seg, pch=19, main="Kalorie vs Tuky")
pc<-prcomp(cereal,scale=T)$x
plot(pc[,1],pc[,2],col=seg,pch=19, main="Rozdělení podle dvou hlavních komponent")
cereal.sc <- scale(cereal)
cereal.hc.sc <- hclust(dist(cereal.sc), "ave")
plot(cereal.hc.sc, hang = -1, labels = truncated_row_names, cex = 0.5)
rect.hclust(cereal.hc.sc,k=8)
seg.sc <- cutree(cereal.hc.sc, k=8)
plot(cereal$calories, cereal$sugars, col=seg.sc, pch=19, main="Kalorie vs Cukry")
plot(cereal$calories, cereal$carbo, col=seg.sc, pch=19, main="Kalorie vs Sacharidy")
plot(cereal$calories, cereal$fiber, col=seg.sc, pch=19, main="Kalorie vs Vláknina")
plot(cereal$calories, cereal$fat, col=seg.sc, pch=19, main="Kalorie vs Tuky")
plot(cereal$calories, cereal$fat, col=seg.sc, pch=9, main="Kalorie vs Tuky")
plot(cereal$calories, cereal$fat, col=seg.sc, pch=29, main="Kalorie vs Tuky")
plot(cereal$calories, cereal$fat, col=seg.sc, pch=12, main="Kalorie vs Tuky")
plot(cereal$calories, cereal$fat, col=seg.sc, pch=15, main="Kalorie vs Tuky")
plot(cereal$calories, cereal$fat, col=seg.sc, pch=19, main="Kalorie vs Tuky")
UScereal
cereal_data <- UScereal
cereal_data <- subset(cereal_data, select = c("calories", "protein", "fat", "sodium", "fibre", "carbo", "sugars", "potassium"))
cereal_data
hc <- hclust(dist(cereal_data))
plot(hc, hang = -1)
# Určení počtu shluků
k <- 4
plot(hc)
rect.hclust(hc, k)
